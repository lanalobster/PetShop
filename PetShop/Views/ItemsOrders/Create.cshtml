@model PetShop.Models.ViewModels.OrderViewModel

<div class="check-container">

    <div class="center">
        <h1>@String.Format("New Order")</h1>
    </div>


    <div class="info">
        @if (Model.ChosenSupplier != null)
        {
            <div class="changable">
                <p>
                    <span class="label">Supplier: </span> @String.Format("{0} {1}", Model.ChosenSupplier.Name, Model.ChosenSupplier.Surname)
                </p>
                @Ajax.ActionLink("Change", "AddSupplier", new { }, new AjaxOptions { UpdateTargetId = "myModal" }, new { id = "customerButton", @class = "control" })
            </div>
        }
        @if (Model.ChosenStore != null)
        {
            <div class="changable">
                <p>
                    <span class="label">Store: </span> @String.Format("{0}", Model.ChosenStore.Street)
                </p>
                @Ajax.ActionLink("Change", "AddStore", new { }, new AjaxOptions { UpdateTargetId = "myModal" }, new { id = "storeButton", @class = "control" })
            </div>
        }
    </div>

    @if (Model.ItemsInOrder.Count() > 0)
    {
        <table class="table">
            <tr>
                <th>
                    Item
                </th>
                <th>
                    Quantity
                </th>
                <th>
                    Price (per item)
                </th>
                <th>
                    Subtotal
                </th>
                <th></th>
            </tr>
            @foreach (var itemInOrder in Model.ItemsInOrder)
            {
                <tr>
                    <td>
                        @itemInOrder.Item.Name
                    </td>
                    <td>
                        @itemInOrder.Quantity
                    </td>
                    <td>
                        @itemInOrder.Price
                    </td>
                    <td>
                        @{
                            double subtotal = itemInOrder.Quantity * (double)(itemInOrder.Price ?? 0);
                        }
                        @string.Format("{0:0.00}", subtotal)
                    </td>
                    <td>
                        @Ajax.ActionLink("Remove", "RemoveItem", new { itemName = itemInOrder.Item.Name }, new AjaxOptions { UpdateTargetId = "body-content" }, new { @class = "control" })
                    </td>
                </tr>
            }

            @if (Model.ItemsInOrder.Count() > 0)
            {
                <tr>
                    <td></td>
                    <td></td>
                    <td>Total:</td>
                    <td>
                        @String.Format("{0: 0.00}", Model.GetTotalSum())
                    </td>
                </tr>

            }

        </table>
    }
<div class="buttons-vertical">
    <div class="buttons">
        @if (Model.ChosenSupplier == null)
        {
            <div class="control-container">
                @Ajax.ActionLink("Add Supplier", "AddSupplier", new { }, new AjaxOptions { UpdateTargetId = "myModal" }, new { id = "customerButton", @class = "submit" })
            </div>
        }

        @if (Model.ChosenStore == null)
        {
            <div class="control-container">
                @Ajax.ActionLink("Add Store", "AddStore", new { }, new AjaxOptions { UpdateTargetId = "myModal" }, new { id = "storeButton", @class = "submit" })
            </div>
        }
        <div class="control-container">
            @Ajax.ActionLink("Add Item", "AddItem", new { }, new AjaxOptions { UpdateTargetId = "myModal" }, new { id = "myBtn", @class = "submit" })
        </div>

        <div id="myModal" class="modal">
            @if (Model.ItemErrorMessages?.Count > 0)
            {
                @RenderPage("AddItem.cshtml", Model)
            }
            @if (Model.SupplierErrorMessages?.Count > 0)
            {
                @RenderPage("AddSupplier.cshtml", Model)
            }
        </div>

        @if (Model.ItemsInOrder.Count() > 0 && Model.ChosenSupplier != null && Model.ChosenStore != null)
        {
            <div class="control-container">
                @Ajax.ActionLink("Finish", "Create", new { }, new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "body-content" }, new { @class = "submit" })
            </div>
        }
    </div>
    <div id="order-button-container">
        <button class="submit control-container" onclick="showConfirmationWindow()">Cancel</button>
    </div>
    
</div>
    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }

    <script>
    var modal = document.getElementById("myModal");
    var btn = document.getElementById("myBtn");
    var registerButton = document.getElementById("customerButton");
    var storeButton = document.getElementById("storeButton");
    var span = document.getElementsByClassName("close")[0];

    registerButton.onclick = function () {
        modal.style.display = "block";
    }

    btn.onclick = function () {
        modal.style.display = "block";
    }

    storeButton.onclick = function () {
        modal.style.display = "block";
    }

    if (@Model.ItemErrorMessages.Count() > 0 || @Model.SupplierErrorMessages.Count() > 0) {
        modal.style.display = "block";
    }
    function showConfirmationWindow() {
        var result = confirm("Your changes won't be saved. Are you sure you want to exit?");
        if (result == true) {
            window.location.href = "Index";
        }
    }
    </script>
