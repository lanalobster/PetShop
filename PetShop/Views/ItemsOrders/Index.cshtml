@model IEnumerable<PetShop.Models.ViewModels.OrderViewModel>

@{
    ViewBag.Title = "Index";
}

<div class="center">
    <h1>Order History</h1>
</div>

@if (this.User.Identity.IsAuthenticated && (!this.User.IsInRole("cashier")))
{
    <div class="search-form">
        @Html.ActionLink("Create New", "Create", new { }, new { id = "search-submit", @class = "submit" })
    </div>
}

<table class="table">
    <tr>
        <th>
            Ordered on
        </th>
        <th>
            Completed on
        </th>
        <th>
            Ordered by
        </th>
        <th>
            Stocked by
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ItemsOrder.Supplier.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ItemsOrder.TotalSum)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @item.ItemsOrder.CreatedOn.Date.ToString("MM/dd/yyyy")
            </td>
            <td>
                @{var stockedDate = item.StockedItems.Count() > 0 ? item.StockedItems[0].CreatedOn.Date.ToString("MM/dd/yyyy") : "";}
                @stockedDate
            </td>

            <td>
                @String.Format("{0} {1}", item.ItemsOrder.Employee.Name, item.ItemsOrder.Employee.Surname)
            </td>
            <td>
                @{var employee = item.StockedItems.Count() > 0 ?
                          String.Format("{0} {1}", item.StockedItems[0].Employee.Name, item.StockedItems[0].Employee.Surname) : "";}
                @employee
            </td>
            <td>
                @String.Format("{0} {1}", item.ItemsOrder.Supplier.Name, item.ItemsOrder.Supplier.Surname)
            </td>
            <td>
                @String.Format("{0:0.00}", item.ItemsOrder.TotalSum)
            </td>
            <td>
                @Html.ActionLink("Details", "Details", new { id = item.ItemsOrder.ItemsOrderId }, new { @class = "control" })
            </td>
        </tr>
    }

</table>
